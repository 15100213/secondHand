<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.dao.ProductImageDAO">
  <resultMap id="BaseResultMap" type="com.sh.model.ProductImage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pId" jdbcType="INTEGER" property="pid" />
    <result column="imageType" jdbcType="VARCHAR" property="imagetype" />
    <result column="imageName" jdbcType="VARCHAR" property="imagename" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sh.model.ProductImage">
    <result column="imageSrc" jdbcType="LONGVARCHAR" property="imagesrc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pId, imageType, imageName
  </sql>
  <sql id="Blob_Column_List">
    imageSrc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sh.model.ProductImageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sh.model.ProductImageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_image
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_image
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sh.model.ProductImageExample">
    delete from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sh.model.ProductImage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_image (pId, imageType, imageName, 
      imageSrc)
    values (#{pid,jdbcType=INTEGER}, #{imagetype,jdbcType=VARCHAR}, #{imagename,jdbcType=VARCHAR}, 
      #{imagesrc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sh.model.ProductImage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_image
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pId,
      </if>
      <if test="imagetype != null">
        imageType,
      </if>
      <if test="imagename != null">
        imageName,
      </if>
      <if test="imagesrc != null">
        imageSrc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="imagetype != null">
        #{imagetype,jdbcType=VARCHAR},
      </if>
      <if test="imagename != null">
        #{imagename,jdbcType=VARCHAR},
      </if>
      <if test="imagesrc != null">
        #{imagesrc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sh.model.ProductImageExample" resultType="java.lang.Long">
    select count(*) from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_image
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pId = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.imagetype != null">
        imageType = #{record.imagetype,jdbcType=VARCHAR},
      </if>
      <if test="record.imagename != null">
        imageName = #{record.imagename,jdbcType=VARCHAR},
      </if>
      <if test="record.imagesrc != null">
        imageSrc = #{record.imagesrc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product_image
    set id = #{record.id,jdbcType=INTEGER},
      pId = #{record.pid,jdbcType=INTEGER},
      imageType = #{record.imagetype,jdbcType=VARCHAR},
      imageName = #{record.imagename,jdbcType=VARCHAR},
      imageSrc = #{record.imagesrc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_image
    set id = #{record.id,jdbcType=INTEGER},
      pId = #{record.pid,jdbcType=INTEGER},
      imageType = #{record.imagetype,jdbcType=VARCHAR},
      imageName = #{record.imagename,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sh.model.ProductImage">
    update product_image
    <set>
      <if test="pid != null">
        pId = #{pid,jdbcType=INTEGER},
      </if>
      <if test="imagetype != null">
        imageType = #{imagetype,jdbcType=VARCHAR},
      </if>
      <if test="imagename != null">
        imageName = #{imagename,jdbcType=VARCHAR},
      </if>
      <if test="imagesrc != null">
        imageSrc = #{imagesrc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sh.model.ProductImage">
    update product_image
    set pId = #{pid,jdbcType=INTEGER},
      imageType = #{imagetype,jdbcType=VARCHAR},
      imageName = #{imagename,jdbcType=VARCHAR},
      imageSrc = #{imagesrc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sh.model.ProductImage">
    update product_image
    set pId = #{pid,jdbcType=INTEGER},
      imageType = #{imagetype,jdbcType=VARCHAR},
      imageName = #{imagename,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>